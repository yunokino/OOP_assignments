/* 2152041 王浩 信07 */

/* 函数实现部分，{ }内的东西可以任意调整，目前的return 0只是一个示例，可改变 */

/* 不允许定义任何形式的外部全局、静态全局、宏定义、只读变量 */

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strlen(const char str[])
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int i = 0;
    while (str[i] != '\0')
        i++;
    return i; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strcat(char s1[], const char s2[])
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int i = 0;
    int j = 0;
    while (s1[i] != '\0')
        i++;
    while (j <= tj_strlen(s2))
    {
        s1[i] = s2[j];
        i++;
        j++;
    }

    return 0; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strncat(char s1[], const char s2[], const int len)
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int i = 0;
    int j = 0;
    while (s1[i] != '\0')
        i++;
    while (j <= (len>tj_strlen(s2)? (tj_strlen(s2)):(len-1)))
    {
        s1[i] = s2[j];
        i++;
        j++;
    }

    return 0; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strcpy(char s1[], const char s2[])
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int j = 0;
    while (j <= tj_strlen(s2))
    {
        s1[j] = s2[j];
        j++;
    }

    return 0; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strncpy(char s1[], const char s2[], const int len)
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int j = 0;
    while (s2[j]!='\0')
    {
        s1[j] = s2[j];
        j++;
        if (j == len)
            break;
    }

    return 0; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strcmp(const char s1[], const char s2[])
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int i = 0;
    while (i<= (tj_strlen(s1)> tj_strlen(s2)? tj_strlen(s2): tj_strlen(s1)))
    {
        if (s1[i] - s2[i] == 0)
        {
            i++;
            continue;
        }
        else
            return  s1[i] - s2[i];
    }
    return 0;
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strcasecmp(const char s1[], const char s2[])
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int i = 0;
    while (i <= (tj_strlen(s1) > tj_strlen(s2) ? tj_strlen(s2) : tj_strlen(s1)))
    {
        if ((s1[i] >= 65 && s1[i] <= 90 ? s1[i] + 32 : s1[i]) - (s2[i] >= 65 && s2[i] <= 90 ? s2[i] + 32 : s2[i]) == 0)
        {
            i++;
            continue;
        }
        else
            return  (s1[i] >= 65 && s1[i] <= 90 ? s1[i] + 32 : s1[i]) - (s2[i] >= 65 && s2[i] <= 90 ? s2[i] + 32 : s2[i]);
    }

    return 0; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strncmp(const char s1[], const char s2[], const int len)
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int i = 0;
    while (i <= len-1)
    {
        if (i == (tj_strlen(s1) > tj_strlen(s2) ? tj_strlen(s2)+1 : tj_strlen(s1)+1))
            break;
        if (s1[i] - s2[i] == 0)
        {
            i++;
            continue;
        }
        else
            return  s1[i] - s2[i];
    }
    return 0; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strcasencmp(const char s1[], const char s2[], const int len)
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    bool is_ok=1;
    int i = 0;;
    while (i <= (len > (tj_strlen(s1) > tj_strlen(s2) ? tj_strlen(s2) : tj_strlen(s1)) ? (tj_strlen(s1) > tj_strlen(s2) ? tj_strlen(s2)  : tj_strlen(s1) ) : len-1))
    {
        if (((s1[i] >= 65) && (s1[i] <= 90) ? s1[i] + 32 : s1[i]) == ((s2[i] >= 65) && (s2[i] <= 90) ? s2[i] + 32 : s2[i]))
        {
            is_ok = 1;
            i++;
        }
        else
        {
            is_ok = 0;
            break;
        }
    }
    if (is_ok)
        return 0;
    else
        return ((s1[i] >= 65) && (s1[i] <= 90) ? s1[i] + 32 : s1[i]) - ((s2[i] >= 65) && (s2[i] <= 90) ? s2[i] + 32 : s2[i]);
    //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strupr(char str[])
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int i = 0;
    while (i<=tj_strlen(str))
    {
        str[i]=(str[i] >= 97 && str[i] <= 122) ? str[i] - 32: str[i];
        i++;
    }

    return 0; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strlwr(char str[])
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int i = 0;
    while (i <= tj_strlen(str))
    {
        str[i] = (str[i] >= 65 && str[i] <= 90) ? str[i] + 32 : str[i];
        i++;
    }

    return 0; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strchr(const char str[], char ch)
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int i = 0;
    while (str[i] != '\0')
    {
        if (str[i] == ch)
            return i + 1;
        else
        {
            i++;
            continue;
        }
    }
    return 0;
 //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strstr(const char str[], const char substr[])
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    
    int i = 0;
    while (str[i] != '\0')
    {
        if (str[i] == substr[0])
        {
            if (tj_strncmp(&str[i], substr, tj_strlen(substr)) == 0)
                return i + 1;
            else
            {
                i++;
                continue;
            }
        }
        else
        {
            i++;
            continue;
        }
    }
    return 0;
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strrchr(const char str[], const char ch)
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int i = tj_strlen(str);
    while (i>=0)
    {
        if (str[i] == ch)
            return i + 1;
        else
        {
            i--;
            continue;
        }
    }

    return 0; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strrstr(const char str[], const char substr[])
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int i = tj_strlen(str);
    while (i >= 0)
    {
        if (str[i] == substr[0])
        {
            if (tj_strncmp(&str[i], substr, tj_strlen(substr)) == 0)
                return i + 1;
            else
            {
                i--;
                continue;
            }
        }
        else
        {
            i--;
            continue;
        }
    }

    return 0; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strrev(char str[])
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int i = 0;
    int j = tj_strlen(str)-1;
    int t;
    for (; i <= j; i++)
    {
        t = str[j];
        str[j] = str[i];
        str[i] = t;
           j--;
    }

    return 0; //return值可根据需要修改
}
