/* 2152041 王浩 信07 */

#include <cstdio>   //NULL
//不再允许包含任何系统头文件

/* ----- 不允许定义任何形式的全局变量/全部数组/只读全局变量/宏定义!!!!! ----- */

/* 函数实现部分，{ }内的东西可以任意调整，目前的return只是一个示例，可改变 */
/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strlen(const char *str)
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int i = 0;
    if (str == NULL)
        return 0;
    else
    {
        while (*str != '\0')
        {
            i++;
            str++;
        }
        return i;
    }
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
char *tj_strcat(char *s1, const char *s2)
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    if (s1 != NULL && s2 != NULL)
    {
        char* t = s1;
        while (*s1 != '\0')
            s1++;
        while (*s2 != '\0')
        {
            *s1 = *s2;
            s1++;
            s2++;
        }
        *s1 = '\0';
        s1 = t;
    }
    return s1;
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
char *tj_strncat(char *s1, const char *s2, const int len)
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    if (s1 != NULL && s2 != NULL)
    {
        char* t1 = s1;
        const char* t2 = s2;
        while (*s1 != '\0')
            s1++;
        while (*s2 != '\0')
        {
            *s1 = *s2;
            if (s2 - t2 >= len)
                break;
            s1++;
            s2++;           
        }
        *s1 = '\0';
        s1 = t1;
    }
    return s1;
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
char *tj_strcpy(char *s1, const char *s2)
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    if (s1 != NULL && s2 != NULL)
    {
        char* t = s1;
        while (*s2 != '\0')
        {
            *s1 = *s2;
            s1++;
            s2++;
        }
        *s1 = '\0';
        s1 = t;
    }
    else if (s1!=NULL&&s2==NULL)
        *s1 = '\0';
    else;
    return s1;
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
char *tj_strncpy(char *s1, const char *s2, const int len)
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    if (len > tj_strlen(s2))
    {
        if (s1 != NULL && s2 != NULL)
        {
            char* t = s1;
            while (*s2 != '\0')
            {
                *s1 = *s2;
                s1++;
                s2++;
            }
            s1 = t;
        }
    }
    else
    {
        if (s1 != NULL && s2 != NULL)
        {
            char* t1 = s1;
            const char* t2 = s2;
            while (*s2 != '\0')
            {
                *s1 = *s2;
                if (s2 - t2 == len - 1)
                    break;
                s1++;
                s2++;
            }
            s1 = t1;
        }
    }
    return s1;
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strcmp(const char *s1, const char *s2)
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    if (s1 != NULL && s2 != NULL)
    {
        while (*s1 != '\0' && *s2 != '\0')
        {
            if (*s1 == *s2)
            {
                s1++;
                s2++;
                continue;
            }
            else
                break;
        }
        return *s1 - *s2;
    }
    else if (s1 == NULL && s2 == NULL)
        return 0;
    else if (s1 == NULL && s2 != NULL)
        return -1;
    else
        return 1;
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strcasecmp(const char *s1, const char *s2)
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    if (s1 != NULL && s2 != NULL)
    {
        while ((*s1 != '\0') && (*s2 != '\0'))
        {               
            if ((*s1 >= 65 && *s1 <= 90 ? *s1 + 32 : *s1) - (*s2 >= 65 && *s2 <= 90 ? *s2 + 32 : *s2) == 0)
            {
                s1++;
                s2++;
                continue;
            }
            else
                break;
        }
        return (*s1 >= 65 && *s1 <= 90 ? *s1 + 32 : *s1) - (*s2 >= 65 && *s2 <= 90 ? *s2 + 32 : *s2);
    }
    else if (s1 == NULL && s2 == NULL)
        return 0;
    else if (s1 == NULL && s2 != NULL)
        return -1;
    else
        return 1;
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strncmp(const char *s1, const char *s2, const int len)
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    if (s1 != NULL && s2 != NULL)
    {
        const char* t = s1;
        while ((*s1 != '\0') && (*s2 != '\0'))
        {
            if (*s1- *s2 == 0)
            {
                if (s1 - t == len - 1)
                    break;
                s1++;
                s2++;
                continue;
            }
            else
                break;
        }
        return *s1 - *s2;
    }
    else if (s1 == NULL && s2 == NULL)
        return 0;
    else if (s1 == NULL && s2 != NULL)
        return -1;
    else
        return 1;
    return 0;
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strcasencmp(const char *s1, const char *s2, const int len)
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    if (s1 != NULL && s2 != NULL)
    {
        const char* t = s1;
        while ((*s1 != '\0') && (*s2 != '\0'))
        {
            if ((*s1 >= 65 && *s1 <= 90 ? *s1 + 32 : *s1) - (*s2 >= 65 && *s2 <= 90 ? *s2 + 32 : *s2) == 0)
            {
                if (s1 - t == len - 1)
                    break;
                s1++;
                s2++;
                continue;
            }
            else
                break;
        }
        return (*s1 >= 65 && *s1 <= 90 ? *s1 + 32 : *s1) - (*s2 >= 65 && *s2 <= 90 ? *s2 + 32 : *s2);
    }
    else if (s1 == NULL && s2 == NULL)
        return 0;
    else if (s1 == NULL && s2 != NULL)
        return -1;
    else
        return 1;
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
char *tj_strupr(char *str)
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    if (str != NULL)
    {
        char* t = str;
        while (*str != '\0')
        {
            *str = (*str >= 97 && *str <= 122 ? *str - 32 : *str);
            str++;
        }
        str = t;
    }
    return str;
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
char *tj_strlwr(char *str)
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    if (str != NULL)
    {
        char* t = str;
        while (*str != '\0')
        {
            *str = (*str >= 65 && *str <= 90 ? *str + 32 : *str);
            str++;
        }
        str = t;
    }
    return str;
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strchr(const char *str, const char ch)
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int i = 1;
    if (str != NULL)
    {
        while (*str != ch && *str != '\0')
        {
            i++;
            str++;
        }
        if (*str == '\0')
            i = 0;
    }
    else
        i = 0;
    return i;
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strstr(const char *str, const char *substr)
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int i = 1;
    if (str != NULL && substr != NULL)
    {
        while (1)
        {
            if (*str == '\0' || tj_strlen(str) < tj_strlen(substr))
            {
                i = 0;
                break;
            }
            while (*str != *substr)
            {
                i++;
                str++;
            }
            const char* t = str;
            if (tj_strncmp(str, substr, tj_strlen(substr)) == 0)
                break;
            str = t;
            str++;
            i++;
        }
    }
    else
        i = 0;
    return i;
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strrchr(const char *str, const char ch)
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int i =tj_strlen(str)+1;
    if (str != NULL)
    {
        const char* t = str;
        while (*str != '\0')
            str++;
        while (*str != ch)
        {
            if(str==t)
            {
                i = 0;
                break;
            }
            str--;
            i--;
        }
    }
    else
        i = 0;
    return i;
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strrstr(const char* str, const char* substr)
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int i = tj_strlen(str) + 1;
    int m = tj_strlen(str); 
    int n = tj_strlen(substr);
    if (str != NULL && substr != NULL)
    {
        const char* t = str;
        while (*str != '\0')
            str++;
        while (1)
        {
            if (str==t || m<n)
            {
                i = 0;
                break;
            }
            while (*str != *substr)
            {
                i--;
                str--;
                if (i==0)
                    break;
            }
            if (i==0)
                break;
            const char* t1 = str;
            if (tj_strncmp(str, substr, tj_strlen(substr)) == 0)
                break;
            else
            {
                if (i == 1)
                    break;
                else
                {
                    str = t1;
                    str--;
                    i--;
                    continue;
                }
            }
        }
    }
    else
        i = 0;
    return i;
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
char *tj_strrev(char *str)
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
   if (str != NULL)
   {
       char* t1 = str;
       char* t2 = str;
       while (*str != '\0')
           str++;
       str--;
       while (t1 <= str)
       {
           char t;
           t = *str;
           *str = *t1;
           *t1 = t;
           t1++;
           str--;
       }
       str = t2;
   }
    return str;
}
